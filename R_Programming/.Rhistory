dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
?file.path
file.path("mytest3.R")
file.path("mytest3.R", "folder1")
file.path("folder1", "folder2")
?dir.create
dir.create("testdir2", file.path("testdir2"), "testdir3")
dir.create(file.path("testdir2", "testdir3"), recursive = TRUE)
?unlink
unlink("testdir2", recursive = T)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink("testdir", recursive = TRUE)
library("swirl")
rm(list=ls())
swirl()
1:20
pi:10
12:1
15:1
?':'
seq(1, 20)
seq(0, 10, by=0.5)
my_seq = seq(5, 10, length=30)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:lenght(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each=10)
num_vect <- c(0.5,55,-10,6)
tf <- num_vect[num_vect<1]
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Edson")
my_name
paste(my_char, collapse = " ")
paste(my_name, collapse = " ")
paste0("Hello", "world!", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
?sum
sum(my_na, na.rm = TRUE)
sum(my_na)
my_data
0 / 0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[c(3000)]
x[3000]
x[c(-2, -10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- c(1:3)
my_vector <- 1:3
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?"matrix"
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE==FALSE)==FALSE
(FALSE==TRUE)==FALSE
6==7
6<7
10<=10
5!=7
5!=7
!(5==7)
FALSE&FALSE
TRE & C(TRUE,FALSE,FALSE)
TRUE & C(TRUE,FALSE,FALSE)
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE,FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5==6,!FALSE)
insts <- sample(10)
ints <- sample(10)
ints
ints > 5
which(ints>5)
which(ints>7)
any(ints < 0)
all(ints > 0)
bye
dataset <- read.csv("D:/Develop/Google Drive/Courses/Coursera/Data Science Specialization/02 - R Programming/Develop/hw1_data.csv")
View(dataset)
dataset
?data.frame
View(dataset)
View(my_data)
View(my_data)
rm(my_data)
rm(my_matrix)
rm(my_matrix2)
rm(my_char)
rm(my_na)
rm(my_name)
rm(my_seq)
rm(my_vector)
rm(cnames)
rm(ints)
rm(insts)
rm(num_vect)
rm(patients)
rm(tf)
rm(vect)
rm(vect2)
rm(x)
rm(y)
rm(z)
dataset
count(dataset)
class(dataset)
nrow(dataset)
head(dataset, 2)
tail(dataset, 2)
dataset[47]
?data.frame
head(dataset, 47)
dataset["Ozonbe", 47]
dataset["Ozone", 47]
dataset[47, "Ozone"]
dataset[, "Ozone"]
is.na(dataset[, "Ozone"])
sum(is.na(dataset[, "Ozone"]), na.rm = FALSE)
sum(is.na(dataset[, "Ozone"]), na.rm = TRUE)
mean(dataset[, "Ozone"], na.rm = TRUE)
mean(dataset[, "Ozone"], na.rm = FALSE)
mySub <- dataset[!is.na(dataset)]
mySub
dataset[, "Ozone"]
dataset[, "Ozone" > 31]
dataset[, "Ozone" > 31 & !is.na(dataset[, "Ozone")]
dataset[, "Ozone" > 31 & !is.na(dataset[, "Ozone"])
sum(is.na(dataset[, "Ozone"]), na.rm = TRUE)
mean(dataset[, "Ozone"], na.rm = TRUE)
mean(dataset[, "Ozone"], na.rm = FALSE)
dataset[, "Ozone" > 31]
dataset[, "Ozone" > 31 & "Temp" > 90]
subset(dataset, Ozone > 31 & Temp > 90)
#mean(subset(dataset, Ozone > 31 & Temp > 90))
#mean(dataset[, "Ozone"], na.rm = TRUE)
subDs <- subset(dataset, Ozone > 31 & Temp > 90)
mean(subDs[, "Solar.R"])
monthDs <- subset(dataset, Month == 6)
monthDs
mean(monthDs[, "Temp"])
monthDs <- subset(dataset, Month == 5)
monthDs
max(monthDs[, "Ozone"], na.rm=TRUE)
remove(dataset)
remove(monthDs)
remove(subDs)
remove(mySub)
?paste()
past("test", ".csv", 1)
paste("test", ".csv", 1)
paste0("test", ".csv", 1)
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
dataSet <- read.csv(paste0(directory, "/", id, ".csv"))
return dataSet
}
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
dataSet <- read.csv(paste0(directory, "/", id, ".csv"))
dataSet
}
pollutantmean("D:/Develop/Google Drive/Courses/Coursera/Data Science Specialization/02 - R Programming/Develop/specdata", "oi", 1)
temp <- read.csv('D:/Develop/Google Drive/Courses/Coursera/Data Science Specialization/02 - R Programming/Develop/specdata/1.csv')
temp <- read.csv("D:/Develop/Google Drive/Courses/Coursera/Data Science Specialization/02 - R Programming/Develop/specdata/1.csv")
setwd('D:/Develop/Google Drive/Courses/Coursera/Data Science Specialization/02 - R Programming/Develop/specdata/1.csv')
pollutantmean <- function(directory, pollutant, id = 1:332) {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of length 1 indicating
## the name of the pollutant for which we will calculate the
## mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used
## Return the mean of the pollutant across all monitors list
## in the 'id' vector (ignoring NA values)
## NOTE: Do not round the result!
dataSet <- read.csv(paste0(directory, "/00", id, ".csv"))
dataSet
}
pollutantmean("D:/Develop/Google Drive/Courses/Coursera/Data Science Specialization/02 - R Programming/Develop/specdata", "oi", 1)
?right
View(pollutantmean)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
x
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
z
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
swirl()
library("swirl")
rm(list=ls())
setwd("D:/Develop/Projects/Coursera/Data-Scientist/R_Programming")
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
getwd()
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which(andy[,"Day"] == 30), "Weight"]
subset(andy$Weight, andy$Day==30)
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss <- andy_start - andy_end
andy_loss
files <- list.files("diet_data")
files
files[1]
files[2]
files[3:5]
head(read.csv(files[3]))
files_full <- list.files("diet_data", full.names=TRUE)
files_full
head(read.csv(files_full[3]))
pwd()
getpwd()
getwd()
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
?list.files
pollutantmean("specdata", "sulfate", 1:10)
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tail(andy_david)
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
for (i in 1:5) {print(i)}
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
dat <- data.frame()
for (i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
median(dat$Weight)
?mean
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
rm(list=ls())
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
?complete.cases
complete("specdata", 30:25)
complete("specdata", 3)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
?c
?df
complete("specdata")
?subset
?for
?for()
source("corr.R")
source
str(source)
str(source("specdata"))
source("specdata")
source("specdata")
source("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
corr("specdata")
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
source("corr.R")
cr <- corr("specdata", 150)
cr
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
?subset
?read.csv
?subset
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
source("corr.R")
source("complete.R")
cr <- corr("specdata", 150)
head(cr)
debugSource('D:/Develop/Projects/Coursera/Data-Scientist/R_Programming/corr.R')
correlations <- numeric(0)
View(corr)
source("complete.R")
corr("specdata", 150)
View(completedCases)
source("complete.R")
corr("specdata", 150)
source("complete.R")
corr("specdata", 150)
source("complete.R")
corr("specdata", 150)
source("complete.R")
corr("specdata", 150)
source("complete.R")
debugSource('D:/Develop/Projects/Coursera/Data-Scientist/R_Programming/corr.R')
corr("specdata", 150)
View(completedCases)
View(DataSet)
getwd
getwd()
source("corr.R")
corr("specdata", 150)
cr <- corr("specdata", 150)
head(cr)
summary(cr)
cr <- corr("specdata", 400)
head(cr)
summary(cr)
cr <- corr("specdata", 5000)
summary(cr)
length(cr)
cr <- corr("specdata")
summary(cr)
length(cr)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
rm(list=ls())
swirl()
Sys.Date()
mean(c(2.4.5))
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate("sd", c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, 6)
evaluate(function(x){x[1]}, 1)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
bye()
